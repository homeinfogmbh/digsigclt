"""Common functions."""

from functools import wraps
from subprocess import CalledProcessError, check_call
from typing import Callable, Sequence


__all__ = ['command']


CommandGenerator = Callable[..., Sequence[str]]
WrappedCommand = Callable[..., int | bool]
Decorator = Callable[[CommandGenerator], WrappedCommand]


def command(*, as_bool: bool = False) -> Decorator:
    """Runs the comment generated by function with subprocess.check_call()."""

    def decorator(function: CommandGenerator) -> WrappedCommand:
        @wraps(function)
        def wrapper(*args, **kwargs) -> int:
            try:
                result = check_call(function(*args, **kwargs))
            except CalledProcessError:
                if as_bool:
                    return False

                raise

            return result == 0 if as_bool else result

        return wrapper

    return decorator
